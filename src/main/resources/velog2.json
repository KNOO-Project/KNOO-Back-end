{
  "data": {
    "post": {
      "id": "79ec67a1-99fb-49fb-b34b-9fc5a3d2695e",
      "title": "컴퓨팅 사고와 개발 실력 늘리는 공부법",
      "released_at": "2023-03-26T10:52:46.255Z",
      "updated_at": "2023-03-30T09:34:09.804Z",
      "tags": [
        "개발실력",
        "공부법",
        "컴퓨터적으로 사고",
        "컴퓨팅 사고"
      ],
      "body": "![](https://velog.velcdn.com/images/teo/post/baee8ece-ac25-498e-9eb2-1ecb9189f823/image.png)\n\n> 혹시 개발 실력 늘리는방법 효과보신 글이나 유튜브 영상 있으시면 공유해주실분 계신가요... 인강보면서 개발공부중인데 이게 맞는 공부법인가 싶네요. \n‘컴퓨터적으로 사고’하는 개발자가 살아남는다는데 그런 공부법을 모르겠습니다.\n\n이번 글을 쓸 수 있도록 인사이트를 주신 \"SHIBA INU\"님 감사드립니다.\n\n## 프롤로그\n\n이번 글은 개발 실력을 늘리기 위한 방법과 컴퓨터적으로 사고하는 법에 대한 개인적인 고찰에 관한 글입니다. \n\n**운동이라 생각하고 꾸준히 훈련하기**, **요구사항을 데이터 관점으로 사고하기** 라는 핵심철학을 바탕으로 어떻게 하면 개발실력을 효과적으로 키우고 컴퓨터적으로 생각하게 할 수 있을지에 대해 얘기하려고 합니다. 이 글이 개발 실력을 늘리고 나에게 맞는 공부법을 찾는 데 도움이 되기를 바랍니다.\n\n### 개발은 학문이 아니라 운동과도 같은 것이다.\n\n우선 첫 번째로 꼭 알려드리고 싶은 내용은 개발은 분명 공부가 많이 필요하지만 오히려 **학문보다는 운동에 더 가깝다**고 생각을 합니다. 저는 보통 개발 실력을 키우는 것을 축구 실력을 키우는 것에 빗대어 주로 설명을 하곤합니다.\n\n![](https://velog.velcdn.com/images/teo/post/07e340a1-8c81-43b5-8baa-fb1e9a1cfcd0/image.png)\n\n축구 교재를 열심히 보고, 축구 교육 영상과 축구 경기를 열심히 보지만 내가 **실제로 공을 차지 않으면 당연히 실력이 늘 수가 없습니다.** 마찬가지로 처음 성장에서는 공부보다도 실제로 몇 번이라도 하는 것이 훨씬 더 실력 향상에 도움이 됩니다. \n\n또한 한 번에 많은 것을 배운다고 해도 꾸준히 하지 않으면 **실력이 단번에 늘지 않습니다.** 운동처럼 내가 한번에 성장할 수 있는 성장폭에는 한계가 있기 때문에 꾸준히 하는 것이 중요합니다.\n\n그렇다고 무조건 실전만 하는 것은 좋지 않습니다. 시간을 효율적으로 사용할 수 없으며 안 좋은 습관이나 형태가 만들어질 수 있기 때문에 **공부와 훈련을 적절히 병행하는 것이 굉장히 중요**하다고 생각을 합니다. (그렇지만 처음에는 실전의 비중이 훨씬 더 중요합니다.)\n\n이후 일정 궤도에 올라가면 반복적인 연습뿐만 아니라 **많은 경험과 시야**가 굉장히 중요해집니다. 새롭고 다양한 경험과 학습을 하는 것이 굉장히 중요해집니다.\n\n뿐만 아니라 축구처럼 개발은 혼자서 하는 것이 아니라 **협업이 굉장히 중요한 과제**입니다. 개발 역시 팀 스포츠에 가깝기 때문에 어떻게 하면 효과적으로 커뮤니케이션을 하고 효과적으로 내 역할과 남의 역할을 어떻게 조율할 수 있는가에 대한 부분들에 대한 부분 역시 굉장히 중요한 부분입니다. \n\n그래서 개인기를 갈고 닦는 것 역시 굉장히 중요하지만 어떻게 하면 골을 만들기 위해서 더 좋은 협업을 할 수 있을지 그리고 자신의 포지션에 대한 이해와 함께 어떻게 커뮤니케이션을 하는지를 학습하는 것 역시 중요합니다.\n\n\n### 도구의 숙련도를 올리는 것과 본질을 이해하는 것은 별개의 것이다.\n\n> 리액트를 공부했는데 뷰를 하는 회사에 합격했는데 잘 할 수 있을까 걱정이 되요.\n> ㄴ 걱정마세요. 리액트를 잘하면 뷰도 금방 합니다. (물론 Svelte도요! 😆)\n\n우리가 보통 개발을 잘한다라고 하는 사람에게는 그가 하고 있는 언어나 생태계에서 잘한다는 것과는 또 다른 잣대가 존재하는 것 같습니다. 잘하는 개발자는 뭘 해도 다 개발을 잘한다는 것을 우리는 잘 압니다.\n\n개발 실력을 늘리고 잘 하기 위해서는 도구의 숙련도 외에 개발의 본질에 대해서도 이해를 하고 잘 하는 것이 필요합니다.\n\nReact나 Svelte, 혹은 Javascript나 Typescript와 같은 언어들을 학습하고 잘하는 것은 특정 도구의 숙련도를 높이는 것이지만 개발을 잘한다고 하는 것은 그와는 다른 본질적인 부분이 있다고 생각합니다.\n\n\n### 많이 알고 있는 것과 잘 하는 것은 또 다른 이야기이다.\n\n> \"면접에서는 대답도 잘하고 많이 알고 있는 것 같아서 뽑았는데 막상 일을 시켜보니까 그렇게 잘하지는 않더라구요.\"\n\n이런 얘기들이 종종 들리는 것 역시 개발은 학문만으로 되어 있는 것은 아니라는 반증입니다. 개발을 잘 하게 되기 위해서는 많이 학습해서 많이 알기만 하는 것으로 되는 것은 아니라는 것입니다.\n\n이 글에서는 크게 2가지의 이야기를 하려고 합니다. 하나는 개발의 언어나 생태계를 떠나서 **컴퓨터적인 사고를 한다는 것이 무엇인지** 개발의 본질 중 일부에 대해서 얘기를 하려고 합니다. 이러한 이해는 개발을 이해하고 학습을 하는데 좋은 체계가 되어 줄 것입니다.\n\n또한 학습이 아니라 훈련을 하기 위해서는 **어떤 방식으로 개발을 훈련하는 것이 좋을지**에 대해서 개인적으로 추천하는 방법에 대해서 얘기하고자 합니다.\n\n---\n\n## 1. 컴퓨터적으로 사고하는 개발자되기\n\n> #### 출처: 위키백과: '컴퓨팅 사고'\n컴퓨팅 사고 또는 전산적 사고(電算的 思考, 영어: computational thinking, CT)는 **컴퓨터가 효과적으로 수행할 수 있도록 문제를 정의하고 그에 대한 답을 기술하는 것이 포함된 사고 과정 일체**를 일컫는다. 정답이 하나가 아니라 여러가지일 수 있는 문제(Open-ended Problem)는 다양한 변수에 기반한 포괄적이며 유의미한 해답도출이 필요한데, 컴퓨팅 사고를 통해서 발견한 **`문제분해(decomposition)`**, **`자료표현(data representation)`**, **`일반화(generalization)`**, **`모형(modeling)`**, **`알고리즘`**이 필요하다. \n\n**컴퓨터적으로 사고한다는 것**은, 문제를 해결하기 위해 필요한 답을 **컴퓨터가 효과적**으로 수행할 수 있도록 정의하고 그에 대한 답을 기술하는 것을 말합니다. 이러한 과정에서 문제를 작은 조각들로 분해하고, 필요한 자료를 표현하며, 일반화하여 해결책을 모델링하고, 최종적으로 알고리즘을 도출하는 것이 중요합니다. \n\n이러한 컴퓨터적 사고 능력을 보유한 사람들은 다양한 문제에 대해 컴퓨터로 해결할 수 있는 유의미한 해답을 도출할 수 있으며, **당연히 프로그래밍 능력도 높아집니다.**\n\n그렇다면 사람의 생각을 **사람이 아니라 컴퓨터에게 더 효과적이게** 하려면 어떻게 생각을 해야할까요? 그 핵심에 대해 한번 알아봅시다.\n\n### '데이터'로 인식하는 것, 컴퓨터적 사고의 출발\n\n컴퓨터는 0과 1의 세계에서만 작동하는 기계입니다. 이러한 숫자의 조합을 통해 숫자, 문자, 음성, 이미지 등 다양한 형태의 데이터를 생성하고 표현할 수 있습니다. 반대로 말하면 사용자의 요구사항을 컴퓨터가 이해하도록 하기 위해서는 숫자로 변환을 해야한다는 것을 의미합니다.\n\n결국 개발이란, 사용자의 요구사항을 프로그래밍 언어를 사용하여 숫자(=데이터)로 표현된 방법을 전달하는 것이 됩니다. \n\n따라서 사용자의 요구사항을 데이터의 관점에서 다시 생각하고 작성하는 것이 컴퓨터적인 사고의 출발점이자 기초가 됩니다.\n\n\n### 불을 켜고 끄기 vs isLight = true;\n\n우선 제일 단순한 예시로 전등을 켜고 끄는 프로그램을 작성한다고 생각해봅시다. \n\n먼저 사용자는 불을 켜거나 끌 수 있는 동작을 수행할 수 있습니다. 그러나 이러한 동작을 바로 컴퓨터에게 이해를 시키는 것은 어렵습니다. \n\n> #### 컴퓨터에게 이해를 시키는 것이 어렵다는 것이 무슨 의미인가요? \n사람은 불을 켜는 동작을 하면 당연히(!) 불이 켜질거라고 말하지 않아도 인식하지만 컴퓨터는 그렇지 않습니다. 컴퓨터는 사람이 인식하는 것과 달리, 불이 켜져 있는 상태와 꺼져 있는 상태를 직접 인식할 수 없기 때문에 이를 반드시 데이터로 표현해주어야 합니다. 즉, 사용자가 요구하는 동작을 기계어로 직접 변환하여 실행할 수 없다는 의미입니다. (이걸 하도록 하는게 요즘 유행하는 AI입니다. 그만큼 어렵다는 얘기죠).\n\n이를 프로그램으로 구현하려면 불의 상태를 표현할 수 있는 데이터가 필요합니다. 이 경우, \"불이 켜져 있다\"와 \"불이 꺼져 있다\" 두 가지 상태를 나타내는 논리값인 boolean 값을 사용할 수 있습니다.\n\n따라서 \"불을 켠다\"라는 행위는 boolean 값이 false인 상태에서 true로 변경되는 것이며, \"불을 끈다\"라는 행위는 boolean 값이 true인 상태에서 false로 변경되는 것입니다.\n\n이러한 상황에서 우리는 \"불을 켜고 끄기\"라는 사용자의 요구사항을 데이터의 관점에서 생각하고, 이를 처리할 수 있는 프로그램을 작성해야 합니다. 따라서 boolean 값을 활용하여 다음과 같은 함수를 작성할 수 있습니다.\n\n```ts\nlet isLight = false;  // 불이 꺼져 있는 상태\n\nconst turnOnLight = () => {\n  isLight = true;\n};\n\nconst turnOffLight = () => {\n  isLight = false;\n};\n```\n\n위의 함수를 실행하면, \"불을 켜다\"라는 요구사항을 처리할 때 turnOnLight() 함수를 실행하여 boolean 값이 false인 isLight 변수를 true로 변경합니다. 반대로 \"불을 끄다\"라는 요구사항을 처리할 때에는 turnOffLight() 함수를 실행하여 boolean 값이 true인 isLight 변수를 false로 변경합니다.\n\n> 이렇게 **문제를 데이터의 관점에서 인식하고 처리하는 것이 바로 컴퓨터적인 사고의 시작**입니다.\n\n\n### 컴퓨터적 사고가 중요한 이유!\n\n우리는 코딩을 배울 때에는 이렇게 데이터 관점으로 인식하는 과정을 보통 직관적으로 그냥 이해를 하고 넘어가기 때문에, 어디까지가 컴퓨터적인 사고이고 어디까지가 요구사항의 경게인지를 잘 모르곤 합니다. 이를 분명히 의식적으로 인지를 하다면 조금 더 컴퓨터적으로 사고를 하는 것을 연습을 할 수 있게 됩니다.\n\n따라서 우리는 프로그램을 작성하기 전에 먼저 문제를 데이터의 관점에서 인식하고 처리하는 것이 중요하다는 것을 인지해야 합니다. 이렇게 의식적으로 인식하고 있다면 어떤 데이터를 어떤 방식으로 처리해야 하는지를 생각하며 코드를 작성할 수 있게 됩니다. 이를 통해 보다 효율적이고 정확한 코드를 작성할 수 있을 뿐만 아니라, 컴퓨터적인 사고를 연습하면서 더 나은 프로그래머가 될 수 있습니다.\n\n\n### Todo를 통해서 한번 더 생각해보자.\n\n입문 최고의 교보재인 Todo 어플리케이션으로 조금 더 심화된 예시를 한번 생각해봅시다.\n\n> **요구사항**: \n> 1. Todo 어플리케이션에서는 할일을 추가하고 체크를 하거나 삭제할 수 있는 기능이 있습니다.\n> 2. 그리고 이러한 일들은 일정 목록에 저장되어 있습니다. \n> 3. 사용자가 완료한 일만 볼 수 있는 기능을 추가하려고 합니다.\n\n단순한 전등의 불켜기/끄기와 달리 `할일을 추가`하고 `삭제`하고 `목록화` 하기 위해서는 새로운 형태의 데이터 구조가 필요합니다. 우리는 이렇게 목록화 하고 추가/삭제가 가능한 데이터 구조를 `Array`라고 배웠기에 이러한 데이터 구조를 통해 할일목록을 표현할 수 있습니다.\n\n또한 `체크를 하거나` 라는 요구사항을 표현하기 위해서 할일에 새로운 상태인 `completed`를 추가해서 **`체크를 하거나` = 완료를 했는지 아닌지** 라는 데이터로 표현을 할 수 있습니다.\n\n그래서 이를 토대로 다음과 같은 형태의 데이터 구조를 생각해볼 수 있습니다.\n\n```js\nconst todoList = [\n  {\n    id: 1,\n    title: \"코드 공부하기\",\n    completed: false,\n  },\n  {\n    id: 2,\n    title: \"운동하기\",\n    completed: true,\n  },\n  {\n    id: 3,\n    title: \"청소하기\",\n    completed: false,\n  },\n];\n```\n\n이 데이터 구조를 기반으로 3번째 요구사항인 `\"3. 완료한 일만 볼 수 있는 기능\"`을 한번 생각해봅시다. 이를 위해서는 completed 속성이 true인 todo 아이템들만 골라내면 됩니다. 이를 위해 filter 함수를 사용할 수 있습니다.\n\n```js\nconst completedTodos = todoList.filter(todo => todo.completed === true);\n```\n\n위 코드는 todoList 배열에서 completed 속성이 true인 todo 아이템들만 골라내어 새로운 배열 completedTodos에 저장합니다.\n\n이렇게 `데이터 구조를 활용하여 사용자 요구사항에 맞는 데이터를 찾아내는 것`이 바로 프로그래밍의 핵심입니다.\n\n> 프로그래밍을 조금 배웠다면 얼핏 당연해보이는 이러한 구현을 이렇게나 다시 설명을 하는 것은 이러한 것을 인식하지 않으면 그냥 직관에 의존하며 개발을 하게 되는데, **이러한 관점과 세계를 인지하고 의식적으로 생각하려고 노력한다면 직관력도 키울 수 있고 본질적인 개발 능력을 키우는 데 큰 도움이 됩니다.**\n\n\n### 데이터 구조를 활용하기 = 알고리즘 그리고 함수\n\n앞선 예제에서 우리는 완료한 일만 볼 수 있는 기능을 만들기 위해서 Array라고 하는 `데이터 구조`에서 filter라고 하는 `함수`를 통해서 조건에 맞는 결과값만 추려내어 새로운 데이터를 찾아내는 것을 해보았습니다. \n\n이렇게 **데이터 구조를 활용하여 원하는 결과를 도출하는 과정을 알고리즘이라고 합니다.**\n\n위에서 사용한 filter 함수는 배열을 입력받아 주어진 조건에 해당하는 요소만을 걸러내어 새로운 배열을 반환하는 알고리즘입니다. filter는 실제로는 아래와 같은 과정(=알고리즘)을 가지고 있습니다.\n\n```js\nfunction filter(array, predicate) {\n  const result = [];\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i])) {\n      result.push(array[i]);\n    }\n  }\n  return result;\n}\n```\n\n이렇게 한 번 만들어진 filter() 함수는 이제 매번 동일한 과정을 반복적으로 구현할 필요 없이, 다른 곳에서 필요할 때 재사용할 수 있습니다. \n\n이를 통해 우리는 필요한 데이터를 추출하는 과정을 ***추상화**할 수 있게 되었습니다.\n\n> #### 컴퓨터 과학에서 추상화란 무엇일까요?\n> \\- 프로그래밍에서 추상화는 세부 사항을 숨기고 필요한 부분만 노출시키는 과정입니다. 예를 들어, 우리는 자동차를 타고 운전을 할 때 모터나 엔진의 내부 동작과 같은 세부적인 부분을 알 필요가 없습니다. 대신, 운전할 때 필요한 인터페이스인 핸들, 악셀, 브레이크 등을 조작하면 되는 것입니다. 이렇게 세부적인 부분을 추상화하여 필요한 부분만 사용자에게 노출시키는 것이 추상화의 핵심 원칙입니다. [출처: chatGPT]\n> \n> 위에서 작성한 filter 함수의 본질은 `조건에 맞는 요소만 걸러낸다` 입니다. 이를 구현하기 위한 반복과정과 Array에 값을 넣는 세부과정은 외부에 노출을 할 필요가 없습니다. **추상화**라는 관점에서 다시 한번 filter 함수를 다시 살펴보세요.\n>\n> ```js\nfunction filter(array, predicate) { // filter라는 동작과 Array와 조건만 있으면 된다.\n  const result = []; \n  for (let i = 0; i < array.length; i++) { // <- 반복하는 과정과\n    if (predicate(array[i])) { \n      result.push(array[i]); // <- Array에 값은 넣어주는 세부과정은 알 필요가 없다.\n    }\n  }\n  return result;\n}\n```\n\n이렇게 데이터의 구조와 알고리즘을 알고 있으면 조금 더 추상화된 형태로 데이터를 다룰 수 있게 되고 더 간결하고 쉬운 형태로 데이터를 다룰 수 있게 됩니다.\n\n```js\n// 완료된 할일 목록(추상화 O)\nconst completedTodos = todoList.filter(todo => todo.completed === true);\n\n\n// 완료된 할일 목록(추상화 X)\nconst completedTodos = []\nfor (let i = 0; i < todoList.length; i++) {\n  if (todo.completed === true) {\n    completedTodos.push(todoList[i]);\n  }\n}\n```\n\n이렇게 **요구사항을 더 나은 데이터의 구조와 추상화된 알고리즘을 통해서 생각하는 것** 역시 컴퓨터적으로 사고를 하는 중요한 개념입니다. 데이터의 관점으로 사고하는 것이 컴퓨터적 사고의 출발이었다면 그 다음은 **추상화라고 하는 개념을 이해하고 잘 활용하는 것**이 그 다음 과정이라고 할 수 있습니다.\n\n\n### 변수, 타입, 조건, 반복, 함수 - 프로그래밍의 핵심 요소\n\n**컴퓨터가 효과적**으로 수행하기 위해서는 사용자의 **요구사항을 데이터의 관점에서 이해**하고, 데이터를 **컴퓨터가 이해할 수 있는 형태로 표현**해야 합니다. 그리고 이를 위해 **데이터의 구조**와 **알고리즘**을 기술해야 한다고 알아보았습니다. 이렇게 컴퓨터가 이해할 수 있도록 표현하는 언어를 **프로그래밍 언어**라고 부릅니다.\n\n지금껏 컴퓨터가 발전하면서 많은 프로그래밍 언어와 도구들이 생겨났지만, 프로그래밍의 본질은 크게 달라지지 않았습니다. 여전히 **변수**, **타입**, **조건**, **반복**, **함수**의 기본 개념을 사용하여 데이터를 컴퓨터가 이해할 수 있는 형태로 표현합니다.\n\n변수는 값을 저장하는 공간이며, 타입은 변수가 저장할 수 있는 값의 종류를 결정합니다. 조건문은 주어진 조건에 따라 프로그램이 다르게 동작하도록 하는 것이며, 반복문은 반복적으로 실행되는 코드를 간단하게 작성할 수 있도록 해줍니다. 함수는 코드의 재사용성을 높여주는 중요한 개념으로, 입력값을 받아 출력값을 반환하는 기능을 합니다.\n\n>종합해보면, 컴퓨터적 사고란 사용자의 요구사항을 데이터의 관점에서 바라보고, 변수, 타입, 조건, 반복, 함수 등을 이용하여 데이터를 컴퓨터가 이해할 수 있는 형태로 표현하는 과정이라는 것을 이해하여, 결국 **인간의 관점에서 기술된 내용들을 컴퓨터가 이해할 수 있는 형태로 바꾸어 생각하는 것**이 컴퓨터적 사고력을 키우는 중요한 과정이라고 할 수 있습니다.\n\n\n### 이걸 검증(훈련)하고자 하는 것이 바로 코딩 테스트!\n\n지금까지의 얘기를 듣다보면 아마 여러분들도 코딩테스트를 떠올렸을 거라고 생각합니다. 코딩 테스트의 문제들은 이러한 컴퓨터적 사고력을 훈련하고 검증하는 역할을 합니다.\n\n생각해보면 코딩테스트들의 문제들은 특정 언어나 라이브러리 등에 종속되지 않는다는 것을 알 수 있습니다. 왜냐하면 코딩 테스트의 목적이 실무능력의 평가가 아니라 데이터를 다루는 방법, 즉 컴퓨터적인 사고에 대한 평가를 하기 위함이기 때문입니다.\n\n코딩 테스트는 데이터의 구조와 알고리즘을 이해하고, 주어진 문제를 해결하기 위한 적절한 방법을 고민하는 능력을 요구합니다. 이러한 능력들은 컴퓨터적 사고력을 향상시키는 데 매우 중요합니다.\n\n\n### 컴퓨터적으로 사고하기, 어떻게 하면 잘 할 수 있을까?\n\n우선, 지금까지 배웠던 내용들은 한번 정리해 보겠습니다.\n\n1. 컴퓨터적인 사고란 사람의 언어로 작성된 요구사항을 컴퓨터가 이해할 수 있는 형태로 바꾸어 문제를 재정의하고 답을 찾는 과정이다. \n\n2. 컴퓨터는 숫자로 이루어져 있기 때문에 데이터의 관점에서만 이해할 수 있으며 데이터는 구조를 가지고 있어 추상화된 알고리즘을 활용할 수 있습니다.\n\n3. 이를 위해 변수, 타입, 조건, 반복, 함수 등을 통해 데이터의 구조와 알고리즘을 기술할 수 있습니다.\n\n4. 종합하면 컴퓨터적 사고는 요구사항을 데이터의 관점으로 이해하고 적절한 구조와 알고리즘을 선택하고 연결하여, 변수, 타입, 조건, 반복, 함수로 생각하여 표현하는 것을 의미한다.\n\n하지만 무엇보다 중요한 것은, **위와 같은 개념을 이해한채로 의식적으로 사고와 훈련을 하는 것입니다.** '하다보면 늘겠지.' 라는 생각으로 열심히 코딩을 하면 어느 정도까지는 직관력에 의해 잘 되는 부분도 있겠지만 한계에 부딫히면 성장이 더뎌 질 수가 있습니다.\n\n### 🔥 [중요!] 의식적으로 훈련하기!\n\n![](https://velog.velcdn.com/images/teo/post/d23c12a5-8002-4d7f-8581-708bf70dc66d/image.png)\n\n**중요한 얘기라서 반복해서 강조하지만, 가장 중요한 것은 `의식적으로` 컴퓨터적 사고를 훈련하는 것입니다.** \n\n무작정 코드를 두드리면서 run & fix를 반복하면서 생각하지 않고 직관에 의존하지 마세요. 의식적으로 생각하는 연습을 하다보면 실무 실전에서는 자연스럽게 직관에 맡기더라도 자연스럽게 컴퓨터적인 사고가 발동하여 좋은 코드를 작성할 수 있게 됩니다.\n\n들어보면 뻔한 얘기일 수 있지만, 무엇을 어떻게 연습을 해보면 좋을 지 적어 보았습니다. 막연히 알고 있는 것보다는 잘 정리된 문장으로 읽어보면 훨씬 더 머리속에서 선명해지는 효과가 있습니다.\n\n>첫째, 요구사항을 받았을 때 그 **요구사항을 데이터의 관점에서 `나눠서 적어보는 훈련`을 해보세요.** 이를 통해 요구사항이 어떤 데이터를 다루는지 파악하고, 데이터를 어떻게 다룰지에 대한 방향성을 정할 수 있습니다.\n>\n둘째, **데이터의 ``구조를 먼저 기술하고 생각``해보는 연습**을 해보세요. 변수, 타입, 조건, 반복, 함수 등을 활용하여 데이터의 구조와 알고리즘을 기술하는 방법을 익혀보세요. 이를 통해 추상적인 개념을 구체적인 코드로 표현하는 능력을 기를 수 있습니다.\n>\n셋째, **`적절한 알고리즘`을 선택하는 연습을 해보세요.** 주어진 문제에 따라서 어떤 알고리즘이 적합한지를 판단하는 능력을 기를 수 있습니다. 이를 위해서는 많은 문제를 풀어보고 다양한 알고리즘을 경험해보는 것이 중요합니다.\n>\n넷째, **`기존 데이터`의 구조와 알고리즘을 `연결`하여 `새로운 데이터를 도출`하는 연습을 해보세요.** 이를 통해 데이터를 어떻게 다룰지에 대한 방법과 알고리즘을 어떻게 적용할지를 연결하는 능력을 기를 수 있습니다.\n\n이러한 방법을 통해 **의식적으로** 컴퓨터적 사고를 훈련하면서, 직관에 맡기는 것이 아니라 데이터의 관점에서 문제를 접근할 수 있게 됩니다. 이를 통해 나중에는 훈련된 컴퓨터적인 사고를 통해서 직관적으로 좋은 코드를 작성할 수 있고, 성장하는 프로그래머가 될 수 있습니다.\n\n\n>#### 못다한 이야기들...\n>\n컴퓨팅 사고에 대해서는 제가 설명한 **`데이터의 관점에서 바라보기`** 외에도 여러가지 키워드들이 존재합니다. 문제해결, 알고리즘, 자료구조, 추상화, 모델링, 시뮬레이션, 패턴인식, 디버깅, 디자인 패턴, 애자일 개발 방법론 등 여러가지 사람들의 요구사항을 컴퓨터의 관점에서 이해할 수 있도록 알게 해주는 지식들이 존재합니다. 특정 언어와 도구를 넘어서는 프로그래밍의 본질을 계속 공부를 해보시는 것을 추천드립니다.\n>\n그 중에서도 저는 **\"데이터의 보관과 전파\"**, **\"더 나은 구조 생각하기\"**, **\"협업\"** 이라는 관점을 가지고 추가적인 이야기들을 다음 글에서 이어나가보려고 합니다. 다음글을 기대해 주세요. (분량 조절을 실패 했어요. 기대 해주세요..)\n\n\n### 코딩 테스트와 실무의 차이점\n\n그렇다고 컴퓨터적인 사고를 훈련하기 위해서 코딩 테스트를 중심으로 연습하는 것은 추천하지 않습니다. 코딩 테스트는 사실 평가를 위한 도구이기에 시간적인 제약사항이 있습니다. 그래서 보통 특정한 알고리즘과 자료구조 등을 활용하여 문제를 해결하는 능력을 평가하기 위한 문제 위주로 만들어지게 됩니다.\n\n반면에 실무에서는 문제를 해결하기 위해 다양한 요소들을 고려해야 합니다. 단순한 컴퓨터적인 사고뿐만 아니라 언어의 특성과 주요한 기능을 연결하고 디자인을 고려하고 일정과 협업, 보안, 유지보수등 다양한 것들을 고려해야합니다.\n\n그렇기 때문에 실제 개발실력을 늘리고 싶다면 학습도 중요하고, 컴퓨터적 사고를 의식적으로 생각하는 것도 중요하고 코딩 테스트를 열심히 공부하는 것도 좋겠지만, **결국은 실전처럼 공부하는 것을 가장 추천합니다.**\n\n그래서 다음 번 글에서는 어떻게 개발공부를 하면 좋은 지에 대해서 이야기를 해보려고 합니다.\n\n---\n\n## 2. 개발, 학습 말고 훈련하기\n\n글 서두에서 설명했듯이 개발은 운동과도 같기에 학습외에도 많이 하는 것이 중요하지만, 어느 정도 검증된 훈련 방법이 있다면 조금 더 효율적으로 성장할 수 있습니다. \n\n그 중에서 개인적으로 제가 제일 효과적으로 성장을 경험했던 **\"남의 코드를 베껴와 일단 돌아가는 코드로 합치는 훈련방법\"** 을 알려드리려고 합니다. \n\n> 본인이 이미 알고 있는 방법과 크게 다르지 않을 수도 있습니다. 원래 정석은 크게 달라지지 않는 법입니다.\n>\n> 이 외에도 대부분의 좋은 개발 학습방법의 큰 골자는 사실 크게 다르지 않습니다. 일단 먼저 만들어봐라. 다 배우고 난 다음에 하려고 하지 마라. 책으로 공부하지 마라. 공식문서를 봐라 등등 언제나 지름길은 없는 법이고 남들이 아무도 모르는 그런 감춰진 꿀팁 같은 건 존재하지 않습니다.\n>\n> 저 역시 뭔가 특별한 것을 말하지는 않을 것이고 특별한 것을 기대하지 마세요. 다만 이 글을 보고나서 나도 이렇게 해야봐겠다! 라는 동기부여만 생긴다면 만족합니다.\n\n\n### 만들고 싶은 목표부터 정하자!\n\n![](https://velog.velcdn.com/images/teo/post/ff623e7a-a526-42a3-98fe-28835cdd88ed/image.png)\n\n내가 만들고 싶은 것들을 하나 목표를 정하시는 게 좋습니다. \n\n목표가 없이 단순히 개발 공부를 하는 것은 큰 효과도 의미도 없다고 생각합니다. 다시 말하지만 개발은 학문이 아닙니다. 무언가 유용하거나 재미있거나 하는 **가치를 기술을 통해서 만들어내는 것** 이기에 만들지 않으면 아무런 의미가 없습니다. \n\n그래서 개발은 결과를 만들고자 하는 것에 집중을 해야합니다. 그러기 위해서는 내가 지금 필요하거나 재밌다거나 만들어 보고 싶은 것들을 생각해서 만드는 것이라고 생각을 합니다. \n\n개발자가 되고 싶다는 생각 이면에는 반드시 **\"무언가를 만들어보고 싶다!\"** 라는 생각이 있었을 거라고 생각을 합니다. \n\n만약 무엇을 만들어야 할지 잘 모르겠다면 지금 공부하고 있는 책에 있는 예제라도 **일단 만들겠다**라는 목표를 먼저 정해보세요!\n\n### 일단 돌아가는 남의 코드를 가져오자!\n\n목표를 정했다면 그 다음으로 해야할 것은 그것을 만들기 위해서 가장 유사한 코드를 찾는 일입니다. 일부만이라도 내가 필요했던 기능이 있는 코드라면 무엇이든 좋습니다. \n\n그리고 그 코드를 그대로 가져와서 **어떻게든 내 환경에서 돌아가게 하세요.** 한번에 바로 실행되어도 좋고 뭔가 잘 되지 않는다면 눈에 보이는 에러들을 구글에도 좋고 chatGPT에도 좋으니 입력해서 어떻게든 돌아가게 해보세요.\n\n코드를 돌아가게 하기 위해서 그 코드들을 분석하고 할 필요는 없습니다. 그 코드를 **어쨌든간에 일단 돌아가게 하는 것이 제일 중요합니다.**\n\n![](https://velog.velcdn.com/images/teo/post/018b1bb1-d606-4a28-91ab-b6724ea981f8/image.png)\n\n### 수정해서 내것으로 만들자!\n\n어떻게든 돌아가게 만들었다면 이제 내가 원하는 형태로의 커스텀을 시도합시다. 우리가 공부했듯이 컴퓨터는 숫자로 돌아갑니다. 그말은 그 숫자를 바꾸기만 해도 뭔가 바뀐다는 것입니다.\n\n**눈에 보이는 숫자들, 혹은 문자들을 바꿔가면서 그 변화를 느껴보세요.** 그러면 자연스럽게 이 부분을 바꾸면 이렇게 되는구나라고 느끼면서 그 코드의 일부나마 맥락을 이해할 수 있게 됩니다.\n\n도저히 어디를 바꿔야 하는지 감이 안온다면 인근에 있는 코드를 중심으로 검색하면서 공부를 시작하세요. 사람은 목적이 있을 때와 목적이 없을 때는 사고하는 뇌 구조가 다릅니다. 그렇기에 내가 특정한 목적이 있을 때 공부했던 것들은 정말로 빠르게 내 지식이 됩니다.\n\n'그런 부분들만 골라내서 일부만 학습을 하는게 효과가 있는지 모르겠다. 나는 처음부터 다 알고 놓치는게 없이 깊이 알고 싶다. 그래야만 다음으로 넘어갈 수 있다.' 라고 하는 문제의 유혹에 빠지지 마세요.\n\n띄엄 띄엄 공부하는 것은 전혀 아무런 문제가 되지 않습니다. **오히려 한 번에 다 이해를 해야만 넘어가겠다고 하는 생각 자체가 개발개발 실력을 키우는 데 굉장히 큰 방해 요소가 됩니다.**\n\n> #### 바퀴를 다시 발명하지마라! - 추상화를 기억하자.\n> \n> 프로그래밍에게 정말 유명한 격언입니다. 이미 만들어진 것을 다시 만드려고 하지 말고 재사용해서 새로운 것, 더 나은 것을 만들어내는 문화야말로 개발문화의 꽃인 공유문화입니다.\n> \n> 추상화란 복잡한 세부내용을 숨기고 필요한 것만 노출하는 것으로 개발에서는 아주 중요한 개념입니다. 남이 만들어 낸 것을 하나하나 다 이해해서 내가 다시 만드려고 하지 말고 필요한 것만 이해하고 사용해서 더 나은 것을 만들고 기여하세요.\n>\n![](https://velog.velcdn.com/images/teo/post/8fd08a55-c3c2-47e8-8639-ff74a3a6451d/image.png)\n\n궁극적으로 개발자라는 직업은 남이 만들어 놓은 코드에서 필요한 부분만 수정해서 내가 원하는 것을 만들어 공유하고 그걸 통해서 또 다른 사람이 더 새로운 것들을 만들어내는 직업입니다.\n\n그렇기 때문에 이 연습대로 훈련을 하시는 것이 가장 개발을 빨리 늘릴 수 있는 본질적인 방법인 거죠. 그리고 이건 절대로 쉽지 않습니다. \n\n### 그리고 결합하라!\n\n![](https://velog.velcdn.com/images/teo/post/9896a590-0e6d-498f-a453-f7918a0151c8/image.png)\n\n내가 원하는 코드가 100% 존재할 수는 없습니다. 이미 그러한 코드가 있다면 내 아이디어의 가치는 이미 누군가가 실현을 하고 있다는 이야기일테고 바퀴는 재발명을 하는 것이 아니니 그것을 똑같이 만들고 있는 것은 좋은 개발자라고 할 수 없습니다.\n\n비록 내 코드가 프랑켄슈타인이 될 지언정 이렇게 저렇게 조립을 해서 만들어서 내가 만들고자하는 가치를 만들어내 보는 연습을 해보세요.\n\n![](https://velog.velcdn.com/images/teo/post/154d5382-82da-4f9b-a8d3-7de60e81da9c/image.png)\n\n두 개를 다른 코드를 결합하는 코드를 결합하는 작업은 절대로 쉽지 않습니다. 그리고 이 과정에서 무수한 에러들을 만나게 되실거에요. 그리고 이 결합을 배우는 과정에서 굉장히 많은 것들을 배울 수가 있어요.\n\n대부분의 문제 해결과 대부분의 어떤 문제 상황들은 이 결합하는 과정에서 발생하고 그렇기에 이 과정에서 성장하게 됩니다. 이렇게 부분적으로 결합을 하는 과정에서 배우게 되는 지식이 정말 참 지식입니다. ~~(사실 깨지고 부딫히고 힘들 때 얻은 지식이라서 오래 기억에 남는 것일수도...)~~\n\n\n### 끊임없이 반복하고 완성하라. (중꺽마!)\n\n사실 이미 여러분들은 이렇게 공부를 하고 있을 거라고 생각합니다. 중요한 것은 꺾이지 않는 마음이죠. 내 코드가 다른데서 봤던 코드들 위에서 위태위태하게 서 있을지라도 이렇게 조금씩 조금씩 쌓아 올라가다보면 자연스럽게 안정적인 코드를 작성하고 있을 거에요.\n\n그리고 한번 위험에 처해봐야 \"아... 내가 다시 이렇게 코딩하면 사람이 아니다..\" 라면서 느끼는 바가 많을 수록 더 크게 성장할 거라고 생각을 합니다.\n\n![](https://velog.velcdn.com/images/teo/post/d862fa1c-0202-4cab-b169-01b7bb6f0e96/image.png)\n\n무엇보다 이 과정에서도 역시 중요한 역시 **의식적으로 컴퓨터적으로 사고** 하고자 하는 생각들입니다. 우선 어떻게든 돌아가도록 하게 만들라고 하는 것과 의식적으로 생각하라고 하는 것들이 일순 모순되어 보이겠지만... 어쩌겠습니까? 이 것이 가장 빠르게 개발공부가 되는 방법인걸요.\n\n> \"일단 뭐든 만들어 봐! 생각은 좀 하면서...\"\n\n---\n\n## 끝으로...\n\n고리타분한 소리를 하자면 뭐든 잘하고자 하면 꾸준히 연습을 하는 것이 가장 중요합니다. 개발 역시 마찬가지겠죠. 그 어떤 방법을 제시한들 꾸준히 열심히 하지 않고 한번에 개발실력을 더 낫게 만들어 주는 방법은 없다고 생각을 합니다. \n\n그렇지만 적어도 이 글이 조금 더 효율적이고 막연하지 않고 선명한 비전을 그려 줄 수는 있을 거라고 생각합니다.\n\n개발을 잘 하기 위해서는 컴퓨터적인 사고가 필요합니다. 컴퓨터적인 사고는 인간의 문제를 컴퓨터가 효과적으로 수행하기 위해 컴퓨터의 관점으로 문제를 재정의하고 답을 찾는 사고과정입니다. 컴퓨터는 0과 1의 숫자의 세상에 살고 있기 때문에 **컴퓨터의 관점으로 바라본다는 것은 곧 데이터의 관점으로 세상을 인식하는 것**입니다. 데이터의 세상에서 다시 구축한 요구사항을 변수, 타입, 조건, 반복, 함수로 표현하는것이 컴퓨터적으로 사고하는 핵심이자 출발점입니다.\n\n개발은 학문의 영역이 아니기에 단순히 이 사실을 알고 있는 것이 중요한 것이 아니라 **의식적으로 훈련을 하는 것이 중요합니다.** 그렇기에 요구사항을 데이터의 관점으로 인식하면서 이름을 붙이고 타입을 생각하고 구조를 **먼저 생각하는 훈련**을 해보는 것을 추천합니다. 그렇게 연습을 하다보면 나중에는 자동으로 그리고 직관적으로 컴퓨터적인 사고를 할 수 있게 될 것입니다.\n\n이러한 생각을 바탕으로 하되 언제나 **실습을 통해 개발 훈련**을 하시기를 바랍니다. 개발은 기술을 통해서 무언가를 만들어내는 작업이기에 만들기 않고 공부만 하는 것은 아무런 도움이 되지 않습니다.\n\n뿐만 아니라 개발은 기존에 만들어 놓은 것을 다시 만드는 직업이 아닙니다. 바퀴는 재발명 하는 것이 아닙니다. 그렇기에 **늘 새로운 것을 목표로 남의 코드에서 필요한 것들만 수정해서 결합해서 내것을 만들어 내는 방식을 바탕으로 개발적인 성장을 해 나가시기 바랍니다.**\n\n진리는 뻔하고 단순하지만 명쾌합니다. 이 글이 새로운 인사이트가 되지는 않을지언정 **\"그래! 나도 이렇게 일단 한번 해보자!**\" 하는 마음을 가지고 당장은 이게 맞는 공부법이라고 믿고 한번 해보시길 바랍니다.\n\n![](https://velog.velcdn.com/images/teo/post/e5e5c04f-3f32-49f2-935d-05957c35d0cc/image.png)\n\n화이팅입니다!",
      "short_description": "혹시 개발 실력 늘리는방법 효과보신 글이나 유튜브 영상 있으시면 공유해주실분 계신가요... 인강보면서 개발공부중인데 이게 맞는 공부법인가 싶네요.\n‘컴퓨터적으로 사고’하는 개발자가 살아남는다는데 그런 공부법을 모르겠습니다.",
      "is_markdown": true,
      "is_private": false,
      "is_temp": false,
      "thumbnail": "https://velog.velcdn.com/images/teo/post/c34bb36c-8be0-4811-9694-d8c3898db8d9/image.png",
      "comments_count": 18,
      "url_slug": "computational-thinking",
      "likes": 226,
      "liked": true,
      "user": {
        "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
        "username": "teo",
        "profile": {
          "id": "0176af92-4fff-49e3-98da-91e5ac373cfc",
          "display_name": "teo.yu",
          "thumbnail": "https://images.velog.io/images/teo/profile/97dd319e-a77f-488f-a502-f2ac80fec110/IMG_4733_Original.jpg",
          "short_bio": "Svelte, rxjs, vite, AdorableCSS를 좋아하는 시니어 프론트엔드 개발자입니다. 궁금한 점이 있다면 아래 홈페이지 버튼을 클릭해서 언제든지 오픈채팅에 글 남겨주시면 즐겁게 답변드리고 있습니다.",
          "profile_links": {
            "url": "https://open.kakao.com/o/gNxDSCLd",
            "email": "developer.1px@gmail.com",
            "github": "developer-1px",
            "facebook": ""
          },
          "__typename": "UserProfile"
        },
        "velog_config": {
          "title": null,
          "__typename": "VelogConfig"
        },
        "__typename": "User"
      },
      "comments": [
        {
          "id": "6f8781d8-9c0c-422e-89f4-9ba99950f5d0",
          "user": {
            "id": "f26618a2-7252-487d-b4d9-007dabf33d77",
            "username": "xylopeofficial",
            "profile": {
              "id": "be79a93d-97f7-47cc-802d-8c356aff7a71",
              "thumbnail": "https://images.velog.io/images/xylopeofficial/profile/58ae668a-c0a8-4993-828a-36972d97f7ea/profile.jpeg",
              "__typename": "UserProfile"
            },
            "__typename": "User"
          },
          "text": "되게 글 자체에 많은 인사이트와 고민이 담겨있네요!! 좋은글 감사해요 테오!!!",
          "replies_count": 1,
          "level": 0,
          "created_at": "2023-03-26T11:22:03.571Z",
          "deleted": false,
          "__typename": "Comment"
        },
        {
          "id": "74e9962c-60b5-479f-b2bd-635ba659a30e",
          "user": {
            "id": "80702a28-3445-430a-8633-4dc6db616bdb",
            "username": "joohaem",
            "profile": {
              "id": "0abb8989-1ddd-4ee0-90f7-133af6a5dc90",
              "thumbnail": "https://images.velog.io/images/joohaem/profile/9821e1eb-5e47-4b3a-ae7f-411f5977374a/social.jpeg",
              "__typename": "UserProfile"
            },
            "__typename": "User"
          },
          "text": "일반적인 내용도 테오님이 정리해주시는 글로 읽으면 훨씬 많은 것이 와닿는 것 같아요!! 좋은 글 감사합니다 :)",
          "replies_count": 1,
          "level": 0,
          "created_at": "2023-03-26T11:40:09.698Z",
          "deleted": false,
          "__typename": "Comment"
        },
        {
          "id": "b1517456-2a04-440a-ba15-bbb2f371a286",
          "user": {
            "id": "433ec4b0-f22c-11e8-9424-3b3a145dc5de",
            "username": "raehan809",
            "profile": {
              "id": "438f0790-f22c-11e8-9424-3b3a145dc5de",
              "thumbnail": "https://images.velog.io/profiles/raehan809/thumbnails/1543313255.983.jpeg",
              "__typename": "UserProfile"
            },
            "__typename": "User"
          },
          "text": "항상 좋은 글 감사합니다.",
          "replies_count": 1,
          "level": 0,
          "created_at": "2023-03-27T05:21:29.066Z",
          "deleted": false,
          "__typename": "Comment"
        },
        {
          "id": "af6541e6-fef8-4da4-aa89-ebf75bf6c1c9",
          "user": {
            "id": "4b980726-98e1-4d8c-93a8-4d5ee2096c6b",
            "username": "advice02",
            "profile": {
              "id": "86723c76-2011-4c8d-b962-ce082f7d2b3b",
              "thumbnail": "https://velog.velcdn.com/images/advice02/profile/118864da-ea01-4994-a45a-f3d6b85f98d5/social_profile.jpeg",
              "__typename": "UserProfile"
            },
            "__typename": "User"
          },
          "text": "매번 인사이트를 주셔서 감사합니다 테오\n누군가 개발을 시작하겠다고 한다면 꼭 얘기하고 싶은 내용이네요 :)\n'개발은 학문이 아니고 운동과도 같은 것이다'라는 말 인용해도 될까요? ㅎㅎ",
          "replies_count": 1,
          "level": 0,
          "created_at": "2023-03-27T10:38:28.651Z",
          "deleted": false,
          "__typename": "Comment"
        },
        {
          "id": "d1d16882-30d8-4b66-903e-b334a33200b2",
          "user": {
            "id": "9b1e0c08-efbb-4852-86cc-b9836278a2c1",
            "username": "wishin",
            "profile": {
              "id": "c38153cf-4d77-44e9-95d5-dfb47de99cb2",
              "thumbnail": "https://velog.velcdn.com/images/wishin/profile/de702c18-3f06-442a-91b0-b5d158088f90/image.png",
              "__typename": "UserProfile"
            },
            "__typename": "User"
          },
          "text": "테오 정성스러운 이번 글도 너무 감사드립니다 :)",
          "replies_count": 1,
          "level": 0,
          "created_at": "2023-03-27T14:55:50.994Z",
          "deleted": false,
          "__typename": "Comment"
        },
        {
          "id": "35aef27d-78e5-43dc-9e12-5a384cb1e18f",
          "user": {
            "id": "7dc0e2a8-037f-49dc-b95a-bd4ed4df9a63",
            "username": "jobmania",
            "profile": {
              "id": "3e62dd1a-f88f-4647-bed0-2697073a61a7",
              "thumbnail": "https://velog.velcdn.com/images/jobmania/profile/47fd8ca9-ec4f-4524-be6a-317c01b38d47/image.png",
              "__typename": "UserProfile"
            },
            "__typename": "User"
          },
          "text": "좋은 내용 뿐만아니라 재미있어서 술술 읽히네요! 잘보고 갑니다!",
          "replies_count": 1,
          "level": 0,
          "created_at": "2023-03-28T00:15:00.239Z",
          "deleted": false,
          "__typename": "Comment"
        },
        {
          "id": "06584761-c670-4dd1-ad57-45df58bc0145",
          "user": {
            "id": "51f3c9ae-418f-477f-9f4b-c88c101215e7",
            "username": "id_gyeom",
            "profile": {
              "id": "cef595fe-b3ae-4c4d-a906-b8190cbf1ce7",
              "thumbnail": "https://velog.velcdn.com/images/id_gyeom/profile/c021d4a3-21ed-43b2-a994-71287c013ed8/social_profile.png",
              "__typename": "UserProfile"
            },
            "__typename": "User"
          },
          "text": "좋은 글 감사합니다 !!\n'어떻게' 공부해야 하는지에 대한 방법을 얻은 것 같습니다.✨",
          "replies_count": 1,
          "level": 0,
          "created_at": "2023-03-28T02:26:05.745Z",
          "deleted": false,
          "__typename": "Comment"
        },
        {
          "id": "798b9754-e891-4dd2-87ff-b4211d5043fa",
          "user": {
            "id": "96073419-350d-43d5-a1f8-5d4afeecd948",
            "username": "endmoseung",
            "profile": {
              "id": "7aec2312-a34d-4f41-b353-3ab422434ff9",
              "thumbnail": "https://velog.velcdn.com/images/endmoseung/profile/edc8d660-641f-4f8c-a7ad-8fc9db8bb5f0/social_profile.jpeg",
              "__typename": "UserProfile"
            },
            "__typename": "User"
          },
          "text": "학습하는 양반식 공부 방법보다 상놈식개발로 훈련하는 방법으로 공부해왔었는데 테오가 정리해주니까 더 와닿는것 같아요 감사합니당:)",
          "replies_count": 1,
          "level": 0,
          "created_at": "2023-03-28T08:14:03.307Z",
          "deleted": false,
          "__typename": "Comment"
        },
        {
          "id": "c8bfb226-fb36-45d2-9d51-124ea834373f",
          "user": {
            "id": "0bb6e2a0-48ef-11ea-bc41-1d5acde4c7e4",
            "username": "kyh196201",
            "profile": {
              "id": "0c16b5e0-48ef-11ea-bc41-1d5acde4c7e4",
              "thumbnail": "https://images.velog.io/profiles/kyh196201/thumbnails/1581000212.28.png",
              "__typename": "UserProfile"
            },
            "__typename": "User"
          },
          "text": "요즘 이 부분에 대해 고민이 많았는데, 마침 포스팅을 해주시다니....\n좋은 글 너무 감사합니다!!",
          "replies_count": 0,
          "level": 0,
          "created_at": "2023-03-30T01:05:23.247Z",
          "deleted": false,
          "__typename": "Comment"
        },
        {
          "id": "61382cef-1e16-4013-ba52-119aed25102e",
          "user": {
            "id": "55aa9f43-9a37-4561-a825-87b96d515ab2",
            "username": "jmeaning",
            "profile": {
              "id": "34e27366-8aca-4fdd-8efc-fe43dba12ae6",
              "thumbnail": "https://images.velog.io/images/jmeaning/profile/830d556c-1005-4047-9f60-0517d0dc5481/KakaoTalk_Photo_2021-07-28-00-18-41.png",
              "__typename": "UserProfile"
            },
            "__typename": "User"
          },
          "text": "잘읽었습니다 .. !",
          "replies_count": 0,
          "level": 0,
          "created_at": "2023-03-30T01:36:27.543Z",
          "deleted": false,
          "__typename": "Comment"
        }
      ],
      "series": {
        "id": "b1b4c97d-146e-4e69-b0af-29133bc1313d",
        "name": "테오의 프론트엔드",
        "url_slug": "테오의-프론트엔드",
        "series_posts": [
          {
            "id": "3f26ad57-e4ad-4c89-9a8c-56d862883d64",
            "post": {
              "id": "ba107016-f40c-4b9d-a8b4-904e0490f0d0",
              "title": "프론트엔드 역사와 미래, 업무 분야 ... 그리고 잘하는 프론트엔드 개발자란?",
              "url_slug": "frontend",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "f2408f3a-6cc8-4a5e-abfe-9b5ac0e93d0d",
            "post": {
              "id": "8cc9359a-a1e8-40af-bcf1-1d54c6f860c0",
              "title": "프론트엔드 개발자에게 알고리즘 공부가 미치는 영향",
              "url_slug": "프론트엔드-개발자에게-알고리즘-공부가-미치는-영향",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "7680bb57-7384-4806-8988-d632746ca5b5",
            "post": {
              "id": "b3408e0f-079b-46d6-9fb8-ffa74c942ac6",
              "title": "프론트엔드에서 MV* 아키텍쳐란 무엇인가요?",
              "url_slug": "프론트엔드에서-MV-아키텍쳐란-무엇인가요",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "a9523a58-beff-4e48-a147-3fd048bc1936",
            "post": {
              "id": "2620fa29-4e32-4ce3-8cbe-10d579943792",
              "title": "왜 Svelte(스벨트)를 좋아하나요?",
              "url_slug": "왜-Svelte스벨트를-좋아하나요",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "eb5e19cc-d3bd-4a09-9fee-349a92f4d0fe",
            "post": {
              "id": "667d9609-8daa-4db7-a0ac-bb88d3875c98",
              "title": "The State of CSS 2021 results are here!",
              "url_slug": "The-State-of-CSS-2021-results-are-here",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "b03aac70-27f3-45f7-a44a-4928c3fbffab",
            "post": {
              "id": "eba7512c-92f2-4668-aa97-1ce3fda8894a",
              "title": "Tip: 효과적으로 회의 하는 법",
              "url_slug": "Tip-효과적으로-회의-하는-법",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "3a1c760d-db4f-4988-814c-65e2f1a33bbc",
            "post": {
              "id": "44cdfb40-3157-48f3-94cf-70fd4a2c79a4",
              "title": "테오의 구글 스프린트(체험) 1기",
              "url_slug": "google-sprint-1",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "8c367898-9bd2-4392-a531-d0e002cdf75d",
            "post": {
              "id": "ea06ad0a-a852-4885-8b42-4c57694773af",
              "title": "풀스택 개발자에 대해서 어떻게 생각하나요?",
              "url_slug": "full-stack-developer",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "514adebe-4b44-41ae-95ed-20c3e5a8d067",
            "post": {
              "id": "d8c4e55d-efa7-4412-93be-6cbb305992b4",
              "title": "Svelte Rxjs Vite AdorableCSS",
              "url_slug": "Svelte-Rxjs-Vite-AdorableCSS",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "35b06699-d11e-458b-b43a-0e975f3c5adf",
            "post": {
              "id": "40f36965-4a7e-40d3-afe8-75322227eb8b",
              "title": "if(kakao) after talk 후기 - 요즘 웹 프론트는 디자니어와 CSS 협업 어떻게 해요?",
              "url_slug": "ifkakao-after-talk-후기-요즘-웹-프론트는-디자니어와-CSS-협업-어떻게-해요",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "1a41d619-1354-4429-9a12-39cdebc47c9d",
            "post": {
              "id": "cecfa300-84dd-43c0-85ee-abebbd7d99c8",
              "title": "CSS 역사로 알아보는 CSS가 어려워진 이유",
              "url_slug": "css-history-1",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "4e9b162f-abb9-4379-82f1-1c294951070b",
            "post": {
              "id": "11b77473-6fa8-4ea1-94c5-23bd1ddfff03",
              "title": "Javascript에서도 SOLID 원칙이 통할까?",
              "url_slug": "Javascript에서도-SOLID-원칙이-통할까",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "4ddbb1e0-87c7-437a-8eaa-2d1273ecb2d8",
            "post": {
              "id": "655600fc-c9a2-4fec-a739-e52cc61094a5",
              "title": "DOM은 다들 어떤식으로 공부하셨나요?",
              "url_slug": "dom",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "9607f9ac-f00d-4d58-aa70-31415ffcbaac",
            "post": {
              "id": "4d39dbd1-586f-45c6-94c1-0be5fc0957cf",
              "title": "테오의 구글 스프린트 2기",
              "url_slug": "google-sprint-2",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "c88e55b1-2ea8-4af6-bf22-f05942e464aa",
            "post": {
              "id": "f0cfd350-cf57-432a-af7e-1a1a0c5a8bf6",
              "title": "프로그래밍 패러다임과 반응형 프로그래밍 그리고 Rx",
              "url_slug": "reactive-programming",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "2f7f4725-ab98-4aa8-9605-67895219a09a",
            "post": {
              "id": "1dadf275-cebd-48ed-8318-a4866a5eb149",
              "title": "테오의 스프린트 3기",
              "url_slug": "google-sprint-3",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "7e110952-327e-4152-be2e-654d210544f0",
            "post": {
              "id": "d2ccea91-afd7-4644-8b37-01e61fccc737",
              "title": "Typescript는 어떻게 공부해야 하나요?",
              "url_slug": "typescript",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "daf6134e-3063-42ee-be83-ba125474bf83",
            "post": {
              "id": "fe2ebec5-aa99-40f5-afb1-8ce7d563403f",
              "title": "테오의 스프린트 4기",
              "url_slug": "google-sprint-4",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "fca2283f-6b71-4720-ae54-c61db7e77014",
            "post": {
              "id": "77efa542-04b4-4c0a-8120-8b828c1a002a",
              "title": "객체지향 프로그래밍과 javascript (약간의 역사를 곁들인...)",
              "url_slug": "oop",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "e343f404-962e-4291-ab2d-646d28813860",
            "post": {
              "id": "4d33a1b8-bcc6-4b52-935c-82e6d21dc607",
              "title": "테오의 스프린트 5기 ",
              "url_slug": "google-sprint-5",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "30057e2c-b300-4f70-b068-f684a3f6c31e",
            "post": {
              "id": "f15fc536-f53b-48ee-b456-c33130712a41",
              "title": "figma를 이용한 더 나은 기획-디자이너-QA-개발 협업 방법",
              "url_slug": "카카오워크-캘린더팀에서-사용한-figma를-이용한-기획-디자이너-QA-개발-방법",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "5b5f7573-08b8-45bc-9401-8f157a5a4127",
            "post": {
              "id": "a148989f-72d0-4898-ac1c-7b15a9d2ca93",
              "title": "즐겁게 협업하는 방법! - 애자일과 피드백 그리고 게임",
              "url_slug": "agile-feedback-game",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "3c023ece-d1b9-4b86-9ed5-dff2ee2848ee",
            "post": {
              "id": "e4d49ded-4c05-4643-be06-2f61fed24840",
              "title": "테오의 스프린트 7기: 회고",
              "url_slug": "google-sprint-7",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "faf2ff39-ecef-42ec-872d-0d25ae629325",
            "post": {
              "id": "858ba134-f617-4d68-b1b5-7c3467395683",
              "title": "다시 쓰는 함수형 프로그래밍",
              "url_slug": "functional-programming",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "33934c76-3c68-4ee0-87dd-404d11188537",
            "post": {
              "id": "2e2fcb9c-a0ca-4bb3-b59c-7bf833691445",
              "title": "협업에 관한 수다: 스크럼과 스프린트",
              "url_slug": "scrum-sprint",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "2c169e68-821e-4308-b6c3-c02c6a898045",
            "post": {
              "id": "8b868032-c83c-4d14-add2-5898125a1c42",
              "title": "취준생들의 테오의 스프린트: 오전반 회고",
              "url_slug": "google-sprint-8",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "c0ef5012-398b-4ae5-a23d-cbac19ada968",
            "post": {
              "id": "1dd7c87f-b2f3-4a91-934e-b4eacc10f67a",
              "title": "Atomic Design Pattern의 Best Practice 여정기",
              "url_slug": "Atomic-Design-Pattern",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "5cbda6e6-64f2-4f27-b1dc-40a702653e16",
            "post": {
              "id": "155e34ac-ba0b-45e3-b017-019764ec19fa",
              "title": "BDD? SDD? 팀 프로젝트 다같이 개발설계하는 방법",
              "url_slug": "behavior-driven-development-schema-driven-development",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "fcb7098b-4a52-4950-a42d-00513dd2444c",
            "post": {
              "id": "7f705789-e296-4c17-921c-3f61884316c4",
              "title": "테오의 스프린트 9기 회고",
              "url_slug": "google-sprint-9",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "b6473587-732b-47d2-b841-68a1e6a61a6c",
            "post": {
              "id": "8035e5bc-f9c6-4d5f-8fd6-d64db7a4798b",
              "title": "Vite 이야기 (feat. Svelte)",
              "url_slug": "vite",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "a50b2285-a2bb-4149-b071-573e17a57722",
            "post": {
              "id": "99a6c048-f847-4231-ae68-843e5faf3ff4",
              "title": "테오의 스프린트 10기",
              "url_slug": "google-sprint-10",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "23e267d0-77f8-41b9-84d5-9a214b930641",
            "post": {
              "id": "137a3264-9acf-4c6e-9084-00c380b083a2",
              "title": "프론트엔드에서 비즈니스 로직과 뷰 로직 분리하기 (feat. MVI 아키텍쳐)",
              "url_slug": "MVI-Architecture",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "c3b1079f-860f-4f3a-8eeb-db1335e233c7",
            "post": {
              "id": "3daad8a9-a02e-48da-a827-d9633f65f9e1",
              "title": "테오의 스프린트 11기",
              "url_slug": "google-sprint-11",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "b5f5ca91-0255-490e-b441-bf64a6f2534a",
            "post": {
              "id": "ebb1491e-f8cb-470d-934f-3d2ea71d083c",
              "title": "Rxjs 한번 배워보실래요?",
              "url_slug": "rxjs",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "045a1dc3-839d-4809-9efd-67bf923e5603",
            "post": {
              "id": "4bb8328e-b794-46d6-99aa-09404800365a",
              "title": "테오의 스프린트 12기",
              "url_slug": "google-sprint-12",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "951126a8-392f-4b2a-8452-e957602e15d3",
            "post": {
              "id": "cc4a81d9-9c7b-4baa-bb52-a020bb4bd1c6",
              "title": "함수형 프로그래밍을 배워보자!",
              "url_slug": "functional-programming-study",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "1ad9bd41-d1f3-4c39-aa52-385ca0bb9440",
            "post": {
              "id": "37b0d4ff-99b7-4bdd-abdc-5338bf741d2b",
              "title": "테오의 스프린트 14기",
              "url_slug": "google-sprint-14",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          },
          {
            "id": "6784be7f-16fc-42f7-9d7d-34b6900681d7",
            "post": {
              "id": "79ec67a1-99fb-49fb-b34b-9fc5a3d2695e",
              "title": "컴퓨팅 사고와 개발 실력 늘리는 공부법",
              "url_slug": "computational-thinking",
              "user": {
                "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
                "username": "teo",
                "__typename": "User"
              },
              "__typename": "Post"
            },
            "__typename": "SeriesPost"
          }
        ],
        "__typename": "Series"
      },
      "linked_posts": {
        "previous": {
          "id": "37b0d4ff-99b7-4bdd-abdc-5338bf741d2b",
          "title": "테오의 스프린트 14기",
          "url_slug": "google-sprint-14",
          "user": {
            "id": "2d43d220-d12c-40ee-a038-6a6e47e7b3b5",
            "username": "teo",
            "__typename": "User"
          },
          "__typename": "Post"
        },
        "next": null,
        "__typename": "LinkedPosts"
      },
      "__typename": "Post"
    }
  }
}